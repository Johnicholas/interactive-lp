% Maze generation

nat : type.
z : nat.
s : nat -> nat.

lt nat nat : bwd.
lt/z : lt z (s N).
lt/s : lt (s N) (s M)
  <- lt N M.

cell nat nat : pred.

size nat : pred.
last nat nat : pred.

% set size to 10
context init_size = {size (s (s (s (s (s (s (s (s (s (s z))))))))))}.

stage makeSquareGrid = {
  
new_cell : $size (s N) * last X Y * lt X N
             -o cell (s X) Y * last (s X) Y.
  
new_row : $size (s N) * last N Y * lt Y N
         -o cell z (s Y) * last z (s Y).

done : size (s N) * last N N -o ().

}

wall_dir : type.
south : dir.
east : dir.

wall nat nat wall_dir : pred.
wall_walker nat nat : pred.
context init_walker = {wall_walker z z}.

qui * stage makeSquareGrid -o stage addWalls * wall_walker z z.

stage addWalls = {
  % if there's a cell to my east, either walk there or put a wall there.
  east_go   : wall_walker X Y * $cell (s X) Y -o wall_walker (s X) Y.
  east_add  : $wall_walker X Y * $cell (s X) Y -o wall X Y east.

  % if there's a cell to my south, either walk there or put a wall there.
  south_go  : wall_walker X Y * $cell X (s Y) -o wall_walker X (s Y).
  south_add : $wall_walker X Y * $cell X (s Y) -o wall X Y south.
}

#trace _ makeSquareGrid {init_size, cell z z, last z z}.
